name: Release

run-name: bump ${{ inputs.version }} version by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      version:
        type: choice
        description: 'part of the project version to update'
        options:
        - major
        - minor
        - patch
        required: true

env:
  PIP_DISABLE_PIP_VERSION_CHECK: on
  PIP_NO_CLEAN: on
  PIP_NO_INPUT: on
  PIP_PREFER_BINARY: on
  PY_COLORS: "1"

permissions:
  contents: write
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      tag: ${{ steps.release.outputs.tag }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Cache requirements
        uses: actions/cache@v4
        env:
          cache-name: cache-requirements
        with:
          path: ~/.cache/pip
          key: ${{ env.cache-name }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ env.cache-name }}-

      - name: Setup python
        uses: actions/setup-python@v6
        with:
          python-version: 3.14

      - name: Install requirements
        run: make setup

      - name: Configure git
        env:
          MEX_BOT_EMAIL: ${{ vars.MEX_BOT_EMAIL }}
          MEX_BOT_USER: ${{ vars.MEX_BOT_USER }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PUB: ${{ secrets.SIGNING_PUB }}
        run: |
          eval "$(ssh-agent -s)"
          pdm setup-commit-signing

      - name: Release new version
        id: release
        run: |
          pdm release ${{ inputs.version }}
          echo "tag=$(git describe --abbrev=0 --tags)" >> "$GITHUB_OUTPUT"

  distribute:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: release
    environment:
      name: pypi
      url: https://pypi.org/p/mex-common
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          ref: ${{ needs.release.outputs.tag }}
          persist-credentials: false

      - name: Cache requirements
        uses: actions/cache@v4
        env:
          cache-name: cache-requirements
        with:
          path: ~/.cache/pip
          key: ${{ env.cache-name }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ env.cache-name }}-

      - name: Setup python
        uses: actions/setup-python@v6
        with:
          python-version: 3.14

      - name: Install requirements
        run: make setup

      - name: Build wheel and sdist distros and create a github release
        env:
          GH_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
        run: |
          gh release create ${{ needs.release.outputs.tag }} --generate-notes --latest --verify-tag
          pdm build --dest dist
          for filename in dist/*; do
            gh release upload ${{ needs.release.outputs.tag }} ${filename};
          done

      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
